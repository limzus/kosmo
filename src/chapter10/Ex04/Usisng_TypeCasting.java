package chapter10.Ex04;

//업 캐스팅 (컴파일러가 자동으로 할당.)
	//기본 자료형 좁은(int) ==> 넓은 범위(double)
	//상속	: 자식타입 ==> 부모 타입

//다운 캐스팅 : 수동으로 직접해야함.
	//기본 자료형 : 넓은 범위(double) ==> 좁은범위로(int) , 자료소실가능 특히, 소수점자리는 다 날라감
	//상속 : 부모 타입 ==> 자식 타입 , (실행시 오류 발생할 수 있다.

class A {}
class B extends A {}
class C extends B {}
class D extends B {}

public class Usisng_TypeCasting {

	public static void main(String[] args) {
		//1. 업캐스팅 (자동으로 변환) : 생략시 컴파일러가 자동으로 추가.
		A ac = (A) new C(); //C ===> A 업캐스팅
		B bc = (B) new C(); //C ===> B 업캐스팅
		
		//bb는 A, B 포함하고있고, B타입으로 지정 (A, B 모두 사용됨)
		B bb = new B();
		A a = (A) bb;		// B --> A 업캐스팅
		
		//2. 다운 캐스팅 (수동으로 직접 할당) : 캐스팅이 불가능한 경우 실행시 오류
		// 다운캐스팅이 불가한 경우.
		A aa = new A(); //aa는 A 타입만 내포하고 있다.
		B b = (B)aa;	//aa는 B 타입을 내포하고있지 않으므로ㅜ 다운캐스팅을 할 수 없다.
						// 구문에는 문제가 없지만, 실행시 문제가 된다.
		C c = (C)aa;	//aa는 C타입을 내포하고있지않으므로 다운 캐스팅이 불가함.
						// 구문에는 문제가 없고, 실행시 오류 발생.
		
		
		//3. 다운캐스팅이 불가한 경우
		A ab = new B();	//ab는 A, B를 내포하고 있다. A타입으로 지정됨.
		B b = )_B_ab ;	//A(부모_ --> B(자식)
		C c = (c)ab		//ab는 C타입을 내포하고있지않으므로 캐스팅이 불가능.
						//구문은 문제없으나, 실행시 오류발생.
				
		B bd = new D();	//bd는 A,B,D를 내포하고 있고, B타입으로 지정		
						//bd는 A,B의 필드와 메소드를 접근.
		
		D d = (D)bd;	//bd는 D를 내포하므로 B==>D	//다운캐스팅
						//d는 A, B, D의 모든 필드와 메소드를 사용가능
	//	C c = (c)bd;	//bd는 C를 내포하고 있지않는다. 캐스팅이 불가능
						// 구문에는 문제가 없고, 실행시 오류
		
		
		A ad = new D();	//ad는 A,B,D를 포함하고있다. A타입으로 지정됨.
		B b1 = (B) ad;	// A => B타입으로 다운 캐스팅
		D b1 = (D) ad;	//
		
	
	}

}
